{"ast":null,"code":"import * as Stomp from 'stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.API_URL = environment.API_URL;\n      this.userId = 5;\n      this.subject = new Subject();\n    }\n\n    initializeWebSocketConnection() {\n      const ws = new SockJS(this.API_URL + \"/socket\");\n      this.stompClient = Stomp.over(ws);\n      const that = this;\n      this.stompClient.connect({}, frame => {\n        that.openGlobalSocket();\n      }, err => {\n        console.log(err);\n      });\n    }\n\n    openGlobalSocket() {\n      this.stompClient.subscribe(`/chat/${this.userId}`, res => {\n        this.sendMessage(JSON.parse(res.body));\n      });\n    }\n\n    sendMessage(message) {\n      this.subject.next(message);\n    }\n\n    clearMessages() {\n      this.subject.next();\n    }\n\n    onMessage() {\n      return this.subject.asObservable();\n    }\n\n    publishMessage(chat) {\n      return this.httpClient.post(`${this.API_URL}/api/sendMessage`, chat);\n    }\n\n  }\n\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}